{
  "version": 3,
  "sources": ["../../wav-encoder/index.js"],
  "sourcesContent": ["\"use strict\";\n\nfunction encodeSync(audioData, opts) {\n  opts = opts || {};\n\n  audioData = toAudioData(audioData);\n\n  if (audioData === null) {\n    throw new TypeError(\"Invalid AudioData\");\n  }\n\n  var floatingPoint = !!(opts.floatingPoint || opts.float);\n  var bitDepth = floatingPoint ? 32 : ((opts.bitDepth|0) || 16);\n  var bytes = bitDepth >> 3;\n  var length = audioData.length * audioData.numberOfChannels * bytes;\n  var dataView = new DataView(new Uint8Array(44 + length).buffer);\n  var writer = createWriter(dataView);\n\n  var format = {\n    formatId: floatingPoint ? 0x0003 : 0x0001,\n    floatingPoint: floatingPoint,\n    numberOfChannels: audioData.numberOfChannels,\n    sampleRate: audioData.sampleRate,\n    bitDepth: bitDepth\n  };\n\n  writeHeader(writer, format, dataView.buffer.byteLength - 8);\n\n  var err = writeData(writer, format, length, audioData, opts);\n\n  if (err instanceof Error) {\n    throw err;\n  }\n\n  return dataView.buffer;\n}\n\nfunction encode(audioData, opts) {\n  return new Promise(function(resolve) {\n    resolve(encodeSync(audioData, opts));\n  });\n}\n\nfunction toAudioData(data) {\n  var audioData = {};\n\n  if (typeof data.sampleRate !== \"number\") {\n    return null;\n  }\n  if (!Array.isArray(data.channelData)) {\n    return null;\n  }\n  if (!(data.channelData[0] instanceof Float32Array)) {\n    return null;\n  }\n\n  audioData.numberOfChannels = data.channelData.length;\n  audioData.length = data.channelData[0].length|0;\n  audioData.sampleRate = data.sampleRate|0;\n  audioData.channelData = data.channelData;\n\n  return audioData;\n}\n\nfunction writeHeader(writer, format, length) {\n  var bytes = format.bitDepth >> 3;\n\n  writer.string(\"RIFF\");\n  writer.uint32(length);\n  writer.string(\"WAVE\");\n\n  writer.string(\"fmt \");\n  writer.uint32(16);\n  writer.uint16(format.floatingPoint ? 0x0003 : 0x0001);\n  writer.uint16(format.numberOfChannels);\n  writer.uint32(format.sampleRate);\n  writer.uint32(format.sampleRate * format.numberOfChannels * bytes);\n  writer.uint16(format.numberOfChannels * bytes);\n  writer.uint16(format.bitDepth);\n}\n\nfunction writeData(writer, format, length, audioData, opts) {\n  var bitDepth = format.bitDepth;\n  var encoderOption = format.floatingPoint ? \"f\" : opts.symmetric ? \"s\" : \"\";\n  var methodName = \"pcm\" + bitDepth + encoderOption;\n\n  if (!writer[methodName]) {\n    return new TypeError(\"Not supported bit depth: \" + bitDepth);\n  }\n\n  var write = writer[methodName].bind(writer);\n  var numberOfChannels = format.numberOfChannels;\n  var channelData = audioData.channelData;\n\n  writer.string(\"data\");\n  writer.uint32(length);\n\n  for (var i = 0, imax = audioData.length; i < imax; i++) {\n    for (var ch = 0; ch < numberOfChannels; ch++) {\n      write(channelData[ch][i]);\n    }\n  }\n}\n\nfunction createWriter(dataView) {\n  var pos = 0;\n\n  return {\n    int16: function(value) {\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    uint16: function(value) {\n      dataView.setUint16(pos, value, true);\n      pos += 2;\n    },\n    uint32: function(value) {\n      dataView.setUint32(pos, value, true);\n      pos += 4;\n    },\n    string: function(value) {\n      for (var i = 0, imax = value.length; i < imax; i++) {\n        dataView.setUint8(pos++, value.charCodeAt(i));\n      }\n    },\n    pcm8: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = (value * 0.5 + 0.5) * 255;\n      value = Math.round(value)|0;\n      dataView.setUint8(pos, value, true);\n      pos += 1;\n    },\n    pcm8s: function(value) {\n      value = Math.round(value * 128) + 128;\n      value = Math.max(0, Math.min(value, 255));\n      dataView.setUint8(pos, value, true);\n      pos += 1;\n    },\n    pcm16: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? value * 32768 : value * 32767;\n      value = Math.round(value)|0;\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    pcm16s: function(value) {\n      value = Math.round(value * 32768);\n      value = Math.max(-32768, Math.min(value, 32767));\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    pcm24: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? 0x1000000 + value * 8388608 : value * 8388607;\n      value = Math.round(value)|0;\n\n      var x0 = (value >>  0) & 0xFF;\n      var x1 = (value >>  8) & 0xFF;\n      var x2 = (value >> 16) & 0xFF;\n\n      dataView.setUint8(pos + 0, x0);\n      dataView.setUint8(pos + 1, x1);\n      dataView.setUint8(pos + 2, x2);\n      pos += 3;\n    },\n    pcm24s: function(value) {\n      value = Math.round(value * 8388608);\n      value = Math.max(-8388608, Math.min(value, 8388607));\n\n      var x0 = (value >>  0) & 0xFF;\n      var x1 = (value >>  8) & 0xFF;\n      var x2 = (value >> 16) & 0xFF;\n\n      dataView.setUint8(pos + 0, x0);\n      dataView.setUint8(pos + 1, x1);\n      dataView.setUint8(pos + 2, x2);\n      pos += 3;\n    },\n    pcm32: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? value * 2147483648 : value * 2147483647;\n      value = Math.round(value)|0;\n      dataView.setInt32(pos, value, true);\n      pos += 4;\n    },\n    pcm32s: function(value) {\n      value = Math.round(value * 2147483648);\n      value = Math.max(-2147483648, Math.min(value, +2147483647));\n      dataView.setInt32(pos, value, true);\n      pos += 4;\n    },\n    pcm32f: function(value) {\n      dataView.setFloat32(pos, value, true);\n      pos += 4;\n    }\n  };\n}\n\nmodule.exports.encode = encode;\nmodule.exports.encode.sync = encodeSync;\n"],
  "mappings": "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",
  "names": []
}
